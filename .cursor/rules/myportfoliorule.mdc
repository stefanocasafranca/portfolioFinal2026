---
alwaysApply: true
---
description: This Code Generation Directives document outlines mandatory coding standards to ensure code quality, maintainability, and team efficiency in a Next.js 15 (React 19) and TypeScript-based project.  Key Principles: 	1.	No Duplication – Prevent redundant code by searching the codebase before writing new functions and consolidating logic when necessary. 	2.	Consolidate Logic – Refactor common operations (Firebase, UI components, API routes, state management) into reusable modules. 	3.	Follow Project Structure – Maintain consistency by adhering to Next.js conventions and keeping files organized. 	4.	Eliminate Dead Code – Use Knip to detect and remove unused files, dependencies, and obsolete logic. 	5.	Testing & Validation – Implement unit and E2E tests, strict TypeScript checking, and schema validation. 	6.	Performance Optimization – Improve efficiency with code splitting, optimized Firebase usage, and a CDN-first approach.  Compliance Benefits: 	•	Fewer bugs and improved maintainability. 	•	Faster development cycles with reduced technical debt. 	•	Streamlined collaboration and onboarding. 	•	Optimized performance and leaner builds.  Failure to adhere to these guidelines may lead to increased maintenance costs, code inconsistencies, and reduced team velocity.